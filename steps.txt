1. Call variables from ts files using string interpolation i.e. {{}}
2. Syntax for intializing a variable
    - nameofVariable:datatype = "" or nameofVariable:datatype;
    - you can  also intialize using a constructor.
    i.e.
    constructor() {
        this.nameofVariable = placevalue here , remember data type
      }
3. A class is a blueprint for object creation i.e. will define properties and methods that an object has access to when
created
ng generate new nameOfClass.
4. To use a class inside a component make sure you import it.
5. Another way of declaring and intializing variables is :
      - nameofVariable:className = place value according to constructor function in class e.g. on Goals component
6. Generate a component using the command : ng generate component componentName e.g Goals Component will handle all functionalities
in regard to goals.
7. When u create a component it's automatically registered in the app.module.ts
8. A component .ts file contains , imports , the @component declaration :with the properties =>
 selector: how the component is referred to in the root, template url : for html template and styles url : for styles of component,
9. Include a component to the root file using the selector tag of the component and placing it in the appcomponent.html file.
10. Parent / Child component relationship : is when one component as the root display(parent) for the other component (child)
11. Input property binding allows us to pass data from a parent component to its child components : e.g goal detail component
, receiving the description from the parent component which is the goal component.
 : define what you want passed at the @Input annotation.
12. Event binding : listening for events to base of actions on. e.g mouse click , etc. e.g
13. When we want a child component to communicate with a parent component,
 we make the child component emit an event that is taken up by the parent component.
14. An event emitter is Used in components with the @Output directive to emit custom events synchronously or asynchronously,
 and register handlers for those events by subscribing to an instance.
15. User initiated events : is basically the concept of allowing users to take control on execution of certain functionalities
through event based actions i.e. a click , a double click etc.
This is done via use of the HostListener used to define the events that will be initiated by user actions e.g. @ strikethrough.directive.ts
16. Add bootstrap using the command : $ npm install --save bootstrap popper then make it available globally in the project inside
the styles.css file.


